// Code generated by triphosphate lexgen. DO NOT EDIT.

#[allow(unused_imports)]
use super::super::super::super::_lex;
///Metadata tag on an atproto resource (eg, repo or record)
#[derive(
    ::std::fmt::Debug,
    ::std::clone::Clone,
    ::std::cmp::PartialEq,
    ::serde::Deserialize,
    ::serde::Serialize,
    ::libipld::DagCbor,
)]
pub struct Label {
    #[serde(default, skip_serializing_if = "Option::is_none")]
    #[ipld(default = None)]
    ///optionally, CID specifying the specific version of 'uri' resource this label applies to
    pub cid: Option<_lex::_rt::Cid>,
    ///timestamp when this label was created
    pub cts: _lex::_rt::Datetime,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    #[ipld(default = None)]
    ///if true, this is a negation label, overwriting a previous label
    pub neg: Option<bool>,
    ///DID of the actor who created this label
    pub src: _lex::_rt::Did,
    ///AT URI of the record, repository (account), or other resource which this label applies to
    pub uri: _lex::_rt::Uri,
    ///the short string name of the value or type of this label
    pub val: ::std::string::String,
}
impl _lex::_rt::LexItem for Label {
    const URI: &'static str = "com.atproto.label.defs#label";
}

///Metadata tag on an atproto record, published by the author within the record. Note -- schemas should use #selfLabels, not #selfLabel.
#[derive(
    ::std::fmt::Debug,
    ::std::clone::Clone,
    ::std::cmp::PartialEq,
    ::serde::Deserialize,
    ::serde::Serialize,
    ::libipld::DagCbor,
)]
pub struct SelfLabel {
    ///the short string name of the value or type of this label
    pub val: ::std::string::String,
}
impl _lex::_rt::LexItem for SelfLabel {
    const URI: &'static str = "com.atproto.label.defs#selfLabel";
}

///Metadata tags on an atproto record, published by the author within the record.
#[derive(
    ::std::fmt::Debug,
    ::std::clone::Clone,
    ::std::cmp::PartialEq,
    ::serde::Deserialize,
    ::serde::Serialize,
    ::libipld::DagCbor,
)]
pub struct SelfLabels {
    pub values: Vec<_lex::com::atproto::label::defs::SelfLabel>,
}
impl _lex::_rt::LexItem for SelfLabels {
    const URI: &'static str = "com.atproto.label.defs#selfLabels";
}
