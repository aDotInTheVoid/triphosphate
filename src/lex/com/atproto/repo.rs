// Code generated by triphosphate lexgen. DO NOT EDIT.
pub mod create_record;
pub mod get_record;

#[allow(unused_imports)]
use super::super::super::_lex;
#[derive(::std::clone::Clone, ::serde::Deserialize, ::serde::Serialize)]
pub struct StrongRef {
    pub cid: _lex::_rt::Cid,
    pub uri: _lex::_rt::AtUri,
}
impl _lex::_rt::LexItem for StrongRef {
    const URI: &'static str = "com.atproto.repo.strongRef";
}

///Create a new record.
pub async fn create_record(
    client: &_lex::_rt::Client,
    args: &_lex::com::atproto::repo::create_record::Args,
) -> ::reqwest::Result<_lex::com::atproto::repo::create_record::Responce> {
    client
        .do_procedure("com.atproto.repo.createRecord", args)
        .await
}

///Get a record.
pub async fn get_record(
    client: &_lex::_rt::Client,
    args: &_lex::com::atproto::repo::get_record::Params,
) -> ::reqwest::Result<_lex::com::atproto::repo::get_record::Responce> {
    client.do_query("com.atproto.repo.getRecord", args).await
}
