// Code generated by triphosphate lexgen. DO NOT EDIT.

#[allow(unused_imports)]
use super::super::super::super::_lex;
#[derive(:: serde :: Deserialize, :: serde :: Serialize)]
pub struct External {
    pub description: ::std::string::String,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub thumb: Option<_lex::_rt::Blob>,
    pub title: ::std::string::String,
    pub uri: _lex::_rt::Uri,
}
#[derive(:: serde :: Deserialize, :: serde :: Serialize)]
pub struct View {
    pub external: _lex::app::bsky::embed::external::ViewExternal,
}
#[derive(:: serde :: Deserialize, :: serde :: Serialize)]
pub struct ViewExternal {
    pub description: ::std::string::String,
    #[serde(default, skip_serializing_if = "Option::is_none")]
    pub thumb: Option<::std::string::String>,
    pub title: ::std::string::String,
    pub uri: _lex::_rt::Uri,
}
